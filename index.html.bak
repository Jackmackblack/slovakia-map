<script type="text/javascript">
        var gk_isXlsx = false;
        var gk_xlsxFileLookup = {};
        var gk_fileData = {};
        function filledCell(cell) {
          return cell !== '' && cell != null;
        }
        function loadFileData(filename) {
        if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
            try {
                var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
                var firstSheetName = workbook.SheetNames[0];
                var worksheet = workbook.Sheets[firstSheetName];

                // Convert sheet to JSON to filter blank rows
                var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
                // Filter out blank rows (rows where all cells are empty, null, or undefined)
                var filteredData = jsonData.filter(row => row.some(filledCell));

                // Heuristic to find the header row by ignoring rows with fewer filled cells than the next row
                var headerRowIndex = filteredData.findIndex((row, index) =>
                  row.filter(filledCell).length >= filteredData[index + 1]?.filter(filledCell).length
                );
                // Fallback
                if (headerRowIndex === -1 || headerRowIndex > 25) {
                  headerRowIndex = 0;
                }

                // Convert filtered JSON back to CSV
                var csv = XLSX.utils.aoa_to_sheet(filteredData.slice(headerRowIndex)); // Create a new sheet from filtered array of arrays
                csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
                return csv;
            } catch (e) {
                console.error(e);
                return "";
            }
        }
        return gk_fileData[filename] || "";
        }
        </script><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Slovakia Tourist Map</title>
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet@1.9.4/dist/leaflet.min.css" />
  <!-- Leaflet MarkerCluster CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet.markercluster@1.5.3/dist/MarkerCluster.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet.markercluster@1.5.3/dist/MarkerCluster.Default.min.css" />
  <!-- React and ReactDOM -->
  <script src="https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.production.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.production.min.js"></script>
  <!-- Babel for JSX -->
  <script src="https://cdn.jsdelivr.net/npm/@babel/standalone@7.22.9/babel.min.js"></script>
  <!-- Leaflet JS -->
  <script src="https://cdn.jsdelivr.net/npm/leaflet@1.9.4/dist/leaflet.min.js"></script>
  <!-- Leaflet MarkerCluster JS -->
  <script src="https://cdn.jsdelivr.net/npm/leaflet.markercluster@1.5.3/dist/leaflet.markercluster.min.js"></script>
  <style>
    #map { height: 600px; width: 100%; }
    body { margin: 0; font-family: Arial, sans-serif; }
    .leaflet-popup-content { width: 280px; }
    .leaflet-popup-content img { max-width: 100%; height: auto; border-radius: 8px; }
    .loading { display: flex; justify-content: center; align-items: center; height: 100%; }
    .accordion-content { max-height: 200px; overflow-y: auto; }
    @media (max-width: 768px) {
      #map { height: 400px; }
      .accordion-content { max-height: 150px; }
    }
    /* Minified Tailwind CSS (generated for app classes) */
    .flex{display:flex}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.justify-between{justify-content:space-between}.justify-center{justify-content:center}.gap-2{gap:.5rem}.gap-4{gap:1rem}.overflow-y-auto{overflow-y:auto}.border{border-width:1px}.border-b{border-bottom-width:1px}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.bg-blue-500{--tw-bg-opacity:1;background-color:rgb(59 130 246/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-500{--tw-bg-opacity:1;background-color:rgb(107 114 128/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-red-500{--tw-bg-opacity:1;background-color:rgb(239 68 68/var(--tw-bg-opacity))}.bg-blue-600{--tw-bg-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity))}.bg-gray-600{--tw-bg-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-purple-700{--tw-bg-opacity:1;background-color:rgb(126 34 206/var(--tw-bg-opacity))}.bg-yellow-600{--tw-bg-opacity:1;background-color:rgb(202 138 4/var(--tw-bg-opacity))}.bg-pink-600{--tw-bg-opacity:1;background-color:rgb(219 39 119/var(--tw-bg-opacity))}.bg-cyan-600{--tw-bg-opacity:1;background-color:rgb(8 145 178/var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.p-2{padding:.5rem}.p-4{padding:1rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-2{margin-bottom:.5rem}.mb-4{margin-bottom:1rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-2xl{font-size:1.5rem;line-height:2rem}.font-semibold{font-weight:600}.font-bold{font-weight:700}.capitalize{text-transform:capitalize}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.shadow-lg{--tw-shadow:0 10px 15px -3px rgb(0 0 0/.1),0 4px 6px -4px rgb(0 0 0/.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.border-transparent{border-color:transparent}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:ring-2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\:ring-blue-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246/var(--tw-ring-opacity))}.hover\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\:bg-blue-600:hover{--tw-bg-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity))}.hover\:bg-gray-600:hover{--tw-bg-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity))}.hover\:bg-green-600:hover{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.animate-spin{animation:spin 1s linear infinite}@keyframes spin{to{transform:rotate(360deg)}}
  </style>
</head>
<body>
  <div id="root"></div>
  <script type="text/babel">
    const { useState, useEffect, useCallback, memo } = React;

    // Web Worker for route optimization
    const routeWorker = new Worker(URL.createObjectURL(new Blob([`
      self.onmessage = function(e) {
        const points = e.data.points;
        const path = [points.shift()];
        let totalDistance = 0;
        while (points.length > 0) {
          let nearest = points[0];
          let minDist = Infinity;
          const lastPoint = path[path.length - 1];
          points.forEach((point, index) => {
            const dist = Math.sqrt(
              Math.pow(lastPoint[0] - point[0], 2) + Math.pow(lastPoint[1] - point[1], 2)
            );
            if (dist < minDist) {
              minDist = dist;
              nearest = point;
              nearest.index = index;
            }
          });
          totalDistance += minDist * 111; // Approx km (degrees to km)
          path.push(nearest);
          points.splice(nearest.index, 1);
        }
        self.postMessage({ path, totalDistance });
      };
    `], { type: 'application/javascript' })));

    // Memoized MapComponent
    const MapComponent = memo(({ setMap, setLoading }) => {
      useEffect(() => {
        const mapInstance = L.map('map', {
          zoomControl: true,
          minZoom: 7,
          maxZoom: 15
        }).setView([48.669, 19.699], 8);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
          maxZoom: 15,
          tileSize: 256,
          zoomOffset: 0
        }).addTo(mapInstance);

        // Full GeoJSON from provided POI list
        const geoJsonData = {
          type: "FeatureCollection",
          features: [
            { type: "Feature", properties: { name: "Orava Castle", type: "castle", description: "13th-century medieval castle, known for Nosferatu filming", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0e/Orava_Castle_2017.jpg/800px-Orava_Castle_2017.jpg" }, geometry: { type: "Point", coordinates: [19.358, 49.262] } },
            { type: "Feature", properties: { name: "Spiš Castle", type: "castle", description: "UNESCO World Heritage Site, one of Europe’s largest castles", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Spis_Castle_2018.jpg/800px-Spis_Castle_2018.jpg" }, geometry: { type: "Point", coordinates: [20.768, 49.000] } },
            { type: "Feature", properties: { name: "Bojnice Castle", type: "castle", description: "Fairytale castle with adjacent zoo", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Bojnice_Castle_2019.jpg/800px-Bojnice_Castle_2019.jpg" }, geometry: { type: "Point", coordinates: [18.577, 48.780] } },
            { type: "Feature", properties: { name: "Bratislava Castle", type: "castle", description: "Iconic hilltop castle overlooking the Danube", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Bratislava_Castle_from_the_Danube_River.jpg/800px-Bratislava_Castle_from_the_Danube_River.jpg" }, geometry: { type: "Point", coordinates: [17.100, 48.142] } },
            { type: "Feature", properties: { name: "Devin Castle", type: "castle", description: "Ruins at the confluence of the Danube and Morava rivers", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Devin_Castle_2016.jpg/800px-Devin_Castle_2016.jpg" }, geometry: { type: "Point", coordinates: [16.978, 48.173] } },
            { type: "Feature", properties: { name: "Trenčín Castle", type: "castle", description: "Medieval castle with panoramic views", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Trencin_Castle_2015.jpg/800px-Trencin_Castle_2015.jpg" }, geometry: { type: "Point", coordinates: [18.045, 48.894] } },
            { type: "Feature", properties: { name: "Červený Kameň", type: "castle", description: "Well-preserved Renaissance castle", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Cerveny_Kamen_Castle_2018.jpg/800px-Cerveny_Kamen_Castle_2018.jpg" }, geometry: { type: "Point", coordinates: [17.335, 48.392] } },
            { type: "Feature", properties: { name: "Betliar Manor", type: "castle", description: "Baroque manor with museum", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Betliar_Manor_2017.jpg/800px-Betliar_Manor_2017.jpg" }, geometry: { type: "Point", coordinates: [20.320, 48.705] } },
            { type: "Feature", properties: { name: "Snina Castle", type: "castle", description: "Historical castle in eastern Slovakia", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Snina_Castle_2019.jpg/800px-Snina_Castle_2019.jpg" }, geometry: { type: "Point", coordinates: [22.152, 48.987] } },
            { type: "Feature", properties: { name: "Slovenská Ľupča", type: "castle", description: "Medieval castle with Gothic elements", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Slovenska_Lupca_Castle_2016.jpg/800px-Slovenska_Lupca_Castle_2016.jpg" }, geometry: { type: "Point", coordinates: [19.270, 48.767] } },
            { type: "Feature", properties: { name: "Budmerice Manor", type: "castle", description: "Neo-Gothic manor house", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Budmerice_Manor_2018.jpg/800px-Budmerice_Manor_2018.jpg" }, geometry: { type: "Point", coordinates: [17.433, 48.350] } },
            { type: "Feature", properties: { name: "Beckov Castle", type: "castle", description: "Ruined medieval castle", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7c/Beckov_Castle_2017.jpg/800px-Beckov_Castle_2017.jpg" }, geometry: { type: "Point", coordinates: [17.898, 48.790] } },
            { type: "Feature", properties: { name: "Čachtice Castle", type: "castle", description: "Infamous for Elizabeth Báthory", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Cachtice_Castle_2019.jpg/800px-Cachtice_Castle_2019.jpg" }, geometry: { type: "Point", coordinates: [17.761, 48.725] } },
            { type: "Feature", properties: { name: "Branč Castle", type: "castle", description: "Ruins with scenic views", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Branc_Castle_2016.jpg/800px-Branc_Castle_2016.jpg" }, geometry: { type: "Point", coordinates: [17.500, 48.733] } },
            { type: "Feature", properties: { name: "Jasenov Castle", type: "castle", description: "Medieval ruins in eastern Slovakia", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Jasenov_Castle_2018.jpg/800px-Jasenov_Castle_2018.jpg" }, geometry: { type: "Point", coordinates: [21.900, 48.903] } },
            { type: "Feature", properties: { name: "Považský Castle", type: "castle", description: "Ruined castle above the Váh river", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Povazsky_Castle_2017.jpg/800px-Povazsky_Castle_2017.jpg" }, geometry: { type: "Point", coordinates: [18.449, 49.136] } },
            { type: "Feature", properties: { name: "Brekov Castle", type: "castle", description: "13th-century castle ruins", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/Brekov_Castle_2016.jpg/800px-Brekov_Castle_2016.jpg" }, geometry: { type: "Point", coordinates: [21.833, 48.900] } },
            { type: "Feature", properties: { name: "Divín Castle", type: "castle", description: "Gothic castle ruins", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Divin_Castle_2018.jpg/800px-Divin_Castle_2018.jpg" }, geometry: { type: "Point", coordinates: [19.533, 48.450] } },
            { type: "Feature", properties: { name: "Šašov Castle", type: "castle", description: "Medieval ruins in central Slovakia", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Sasov_Castle_2017.jpg/800px-Sasov_Castle_2017.jpg" }, geometry: { type: "Point", coordinates: [18.900, 48.683] } },
            { type: "Feature", properties: { name: "Lietava Castle", type: "castle", description: "One of Slovakia’s largest castle ruins", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Lietava_Castle_2016.jpg/800px-Lietava_Castle_2016.jpg" }, geometry: { type: "Point", coordinates: [18.683, 49.167] } },
            { type: "Feature", properties: { name: "Likava Castle", type: "castle", description: "Medieval castle near Liptovský Mikuláš", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Likava_Castle_2018.jpg/800px-Likava_Castle_2018.jpg" }, geometry: { type: "Point", coordinates: [19.367, 49.100] } },
            { type: "Feature", properties: { name: "Plavecký Castle", type: "castle", description: "Ruins in the Little Carpathians", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Plavecky_Castle_2017.jpg/800px-Plavecky_Castle_2017.jpg" }, geometry: { type: "Point", coordinates: [17.283, 48.500] } },
            { type: "Feature", properties: { name: "Pajštún Castle", type: "castle", description: "Ruined castle near Bratislava", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Pajstun_Castle_2016.jpg/800px-Pajstun_Castle_2016.jpg" }, geometry: { type: "Point", coordinates: [17.083, 48.317] } },
            { type: "Feature", properties: { name: "Čabrad Castle", type: "castle", description: "Remote medieval ruins", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Cabrad_Castle_2018.jpg/800px-Cabrad_Castle_2018.jpg" }, geometry: { type: "Point", coordinates: [19.083, 48.250] } },
            { type: "Feature", properties: { name: "Šomoška Castle", type: "castle", description: "Castle ruins near Hungary border", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Somoska_Castle_2019.jpg/800px-Somoska_Castle_2019.jpg" }, geometry: { type: "Point", coordinates: [19.857, 48.171] } },
            { type: "Feature", properties: { name: "Ochtinská Aragonite Cave", type: "cave", description: "Rare aragonite formations, UNESCO site", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Ochtinska_Aragonite_Cave_2017.jpg/800px-Ochtinska_Aragonite_Cave_2017.jpg" }, geometry: { type: "Point", coordinates: [20.317, 48.667] } },
            { type: "Feature", properties: { name: "Domica Cave", type: "cave", description: "Largest cave in Slovak Karst, UNESCO site", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Domica_Cave_2017.jpg/800px-Domica_Cave_2017.jpg" }, geometry: { type: "Point", coordinates: [20.483, 48.477] } },
            { type: "Feature", properties: { name: "Gombasecká Cave", type: "cave", description: "Stalactite cave in Slovak Karst", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Gombasecka_Cave_2016.jpg/800px-Gombasecka_Cave_2016.jpg" }, geometry: { type: "Point", coordinates: [20.467, 48.567] } },
            { type: "Feature", properties: { name: "Jasovská Cave", type: "cave", description: "Oldest accessible cave in Slovakia", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Jasovska_Cave_2018.jpg/800px-Jasovska_Cave_2018.jpg" }, geometry: { type: "Point", coordinates: [20.975, 48.678] } },
            { type: "Feature", properties: { name: "Dobšinská Ice Cave", type: "cave", description: "UNESCO-listed ice cave", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Dobsinska_Ice_Cave_2017.jpg/800px-Dobsinska_Ice_Cave_2017.jpg" }, geometry: { type: "Point", coordinates: [20.300, 48.867] } },
            { type: "Feature", properties: { name: "Bystrianska Cave", type: "cave", description: "Cave in Low Tatras", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Bystrianska_Cave_2016.jpg/800px-Bystrianska_Cave_2016.jpg" }, geometry: { type: "Point", coordinates: [19.600, 48.833] } },
            { type: "Feature", properties: { name: "Demänovská Cave of Freedom", type: "cave", description: "Largest cave system in Slovakia", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Demanovska_Cave_Freedom_2018.jpg/800px-Demanovska_Cave_Freedom_2018.jpg" }, geometry: { type: "Point", coordinates: [19.583, 48.998] } },
            { type: "Feature", properties: { name: "Demänovská Ice Cave", type: "cave", description: "Ice formations in Low Tatras", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Demanovska_Ice_Cave_2017.jpg/800px-Demanovska_Ice_Cave_2017.jpg" }, geometry: { type: "Point", coordinates: [19.567, 48.983] } },
            { type: "Feature", properties: { name: "Važecká Cave", type: "cave", description: "Small cave with stalactites", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/Vazecka_Cave_2016.jpg/800px-Vazecka_Cave_2016.jpg" }, geometry: { type: "Point", coordinates: [19.983, 49.050] } },
            { type: "Feature", properties: { name: "Belianska Cave", type: "cave", description: "Cave in Tatra Mountains", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Belianska_Cave_2018.jpg/800px-Belianska_Cave_2018.jpg" }, geometry: { type: "Point", coordinates: [20.317, 49.233] } },
            { type: "Feature", properties: { name: "High Tatras - Popradské Pleso", type: "nature", description: "Glacial lake ideal for hiking", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Popradsk%C3%A9_pleso_2016.jpg/800px-Popradsk%C3%A9_pleso_2016.jpg" }, geometry: { type: "Point", coordinates: [20.080, 49.153] } },
            { type: "Feature", properties: { name: "High Tatras - Kriváň", type: "nature", description: "Iconic peak in High Tatras", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Krivan_2017.jpg/800px-Krivan_2017.jpg" }, geometry: { type: "Point", coordinates: [19.999, 49.162] } },
            { type: "Feature", properties: { name: "Slovak Paradise - Zavojovy Waterfall", type: "nature", description: "Scenic waterfall in Slovak Paradise National Park", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Zavojovy_Waterfall_2019.jpg/800px-Zavojovy_Waterfall_2019.jpg" }, geometry: { type: "Point", coordinates: [20.383, 48.883] } },
            { type: "Feature", properties: { name: "Low Tatras", type: "nature", description: "National park with hiking trails", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Low_Tatras_2016.jpg/800px-Low_Tatras_2016.jpg" }, geometry: { type: "Point", coordinates: [19.600, 48.950] } },
            { type: "Feature", properties: { name: "Pieniny - Dunajec River Rafting", type: "nature", description: "Scenic river rafting experience", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Dunajec_River_Rafting_2018.jpg/800px-Dunajec_River_Rafting_2018.jpg" }, geometry: { type: "Point", coordinates: [20.400, 49.400] } },
            { type: "Feature", properties: { name: "Malá Fatra", type: "nature", description: "National park with gorges and peaks", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Mala_Fatra_2017.jpg/800px-Mala_Fatra_2017.jpg" }, geometry: { type: "Point", coordinates: [19.033, 49.200] } },
            { type: "Feature", properties: { name: "Muránska Planina", type: "nature", description: "Karst landscape with hiking", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Muranska_Planina_2016.jpg/800px-Muranska_Planina_2016.jpg" }, geometry: { type: "Point", coordinates: [20.033, 48.767] } },
            { type: "Feature", properties: { name: "Poloniny", type: "nature", description: "Remote national park, UNESCO site", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Poloniny_2018.jpg/800px-Poloniny_2018.jpg" }, geometry: { type: "Point", coordinates: [22.533, 49.000] } },
            { type: "Feature", properties: { name: "Slovak Karst", type: "nature", description: "Karst region with caves", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Slovak_Karst_2017.jpg/800px-Slovak_Karst_2017.jpg" }, geometry: { type: "Point", coordinates: [20.600, 48.600] } },
            { type: "Feature", properties: { name: "Slovak National Museum", type: "museum", description: "Cultural museum in Bratislava", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Slovak_National_Museum_2015.jpg/800px-Slovak_National_Museum_2015.jpg" }, geometry: { type: "Point", coordinates: [17.113, 48.141] } },
            { type: "Feature", properties: { name: "Banská Štiavnica Mining Museum", type: "museum", description: "Open-air mining museum", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/Banska_Stiavnica_Mining_Museum_2018.jpg/800px-Banska_Stiavnica_Mining_Museum_2018.jpg" }, geometry: { type: "Point", coordinates: [18.893, 48.459] } },
            { type: "Feature", properties: { name: "Spiš Castle Museum", type: "museum", description: "Museum within Spiš Castle", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Spis_Castle_2018.jpg/800px-Spis_Castle_2018.jpg" }, geometry: { type: "Point", coordinates: [20.768, 49.000] } },
            { type: "Feature", properties: { name: "Danubiana Meulensteen Art Museum", type: "museum", description: "Modern art museum near Bratislava", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Danubiana_Museum_2017.jpg/800px-Danubiana_Museum_2017.jpg" }, geometry: { type: "Point", coordinates: [17.233, 48.033] } },
            { type: "Feature", properties: { name: "Andy Warhol Museum", type: "museum", description: "Pop art museum in Medzilaborce", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Andy_Warhol_Museum_2016.jpg/800px-Andy_Warhol_Museum_2016.jpg" }, geometry: { type: "Point", coordinates: [21.900, 49.267] } },
            { type: "Feature", properties: { name: "Orava Village Museum", type: "museum", description: "Open-air museum in Zuberec", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7c/Orava_Village_Museum_2018.jpg/800px-Orava_Village_Museum_2018.jpg" }, geometry: { type: "Point", coordinates: [19.667, 49.267] } },
            { type: "Feature", properties: { name: "Liptov Village Museum", type: "museum", description: "Traditional village in Pribylina", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Liptov_Village_Museum_2017.jpg/800px-Liptov_Village_Museum_2017.jpg" }, geometry: { type: "Point", coordinates: [19.800, 49.100] } },
            { type: "Feature", properties: { name: "Čičmany Museum", type: "museum", description: "Folk architecture museum", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Cicmany_Museum_2016.jpg/800px-Cicmany_Museum_2016.jpg" }, geometry: { type: "Point", coordinates: [18.517, 48.950] } },
            { type: "Feature", properties: { name: "Kysuce Village Museum", type: "museum", description: "Open-air museum in Vychylovka", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Kysuce_Village_Museum_2018.jpg/800px-Kysuce_Village_Museum_2018.jpg" }, geometry: { type: "Point", coordinates: [19.083, 49.400] } },
            { type: "Feature", properties: { name: "SNM Martin", type: "museum", description: "Ethnographic museum", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/SNM_Martin_2017.jpg/800px-SNM_Martin_2017.jpg" }, geometry: { type: "Point", coordinates: [18.933, 49.067] } },
            { type: "Feature", properties: { name: "Bojnice Castle Museum", type: "museum", description: "Museum within Bojnice Castle", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Bojnice_Castle_2019.jpg/800px-Bojnice_Castle_2019.jpg" }, geometry: { type: "Point", coordinates: [18.577, 48.780] } },
            { type: "Feature", properties: { name: "Betliar Manor Museum", type: "museum", description: "Museum in Betliar Manor", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Betliar_Manor_2017.jpg/800px-Betliar_Manor_2017.jpg" }, geometry: { type: "Point", coordinates: [20.320, 48.705] } },
            { type: "Feature", properties: { name: "Stará Ľubovňa Museum", type: "museum", description: "Open-air museum with castle", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/Stara_Lubovna_Museum_2016.jpg/800px-Stara_Lubovna_Museum_2016.jpg" }, geometry: { type: "Point", coordinates: [20.700, 49.300] } },
            { type: "Feature", properties: { name: "Levoča Museum", type: "museum", description: "Historical museum in Levoča", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Levoca_Town_Hall_2018.jpg/800px-Levoca_Town_Hall_2018.jpg" }, geometry: { type: "Point", coordinates: [20.589, 49.025] } },
            { type: "Feature", properties: { name: "Košice Technical Museum", type: "museum", description: "Technology museum in Košice", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/Kosice_Technical_Museum_2017.jpg/800px-Kosice_Technical_Museum_2017.jpg" }, geometry: { type: "Point", coordinates: [21.258, 48.720] } },
            { type: "Feature", properties: { name: "Blue Church", type: "church", description: "Art Nouveau church in Bratislava", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Blue_Church_Bratislava.jpg/800px-Blue_Church_Bratislava.jpg" }, geometry: { type: "Point", coordinates: [17.139, 48.144] } },
            { type: "Feature", properties: { name: "Košice Cathedral", type: "church", description: "14th-century Gothic cathedral", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/Kosice_Cathedral_2016.jpg/800px-Kosice_Cathedral_2016.jpg" }, geometry: { type: "Point", coordinates: [21.258, 48.720] } },
            { type: "Feature", properties: { name: "Spišská Kapitula", type: "church", description: "Medieval ecclesiastical town", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Spisska_Kapitula_2018.jpg/800px-Spisska_Kapitula_2018.jpg" }, geometry: { type: "Point", coordinates: [20.750, 49.000] } },
            { type: "Feature", properties: { name: "St. Martin’s Cathedral", type: "church", description: "Gothic cathedral in Bratislava", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/St_Martins_Cathedral_2017.jpg/800px-St_Martins_Cathedral_2017.jpg" }, geometry: { type: "Point", coordinates: [17.105, 48.142] } },
            { type: "Feature", properties: { name: "Banská Bystrica Cathedral", type: "church", description: "Baroque cathedral", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Banska_Bystrica_Cathedral_2016.jpg/800px-Banska_Bystrica_Cathedral_2016.jpg" }, geometry: { type: "Point", coordinates: [19.150, 48.735] } },
            { type: "Feature", properties: { name: "Levoča St. James Church", type: "church", description: "Gothic church with tallest altar", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Levoca_Town_Hall_2018.jpg/800px-Levoca_Town_Hall_2018.jpg" }, geometry: { type: "Point", coordinates: [20.589, 49.025] } },
            { type: "Feature", properties: { name: "Trnava St. John the Baptist", type: "church", description: "Baroque basilica", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Trnava_St_John_Baptist_2017.jpg/800px-Trnava_St_John_Baptist_2017.jpg" }, geometry: { type: "Point", coordinates: [17.587, 48.377] } },
            { type: "Feature", properties: { name: "Prešov Co-Cathedral", type: "church", description: "Baroque cathedral in Prešov", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7c/Presov_CoCathedral_2016.jpg/800px-Presov_CoCathedral_2016.jpg" }, geometry: { type: "Point", coordinates: [21.239, 48.998] } },
            { type: "Feature", properties: { name: "Nitra St. Emmeram", type: "church", description: "Oldest cathedral in Slovakia", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Nitra_St_Emmeram_2018.jpg/800px-Nitra_St_Emmeram_2018.jpg" }, geometry: { type: "Point", coordinates: [18.087, 48.317] } },
            { type: "Feature", properties: { name: "Žilina Holy Trinity", type: "church", description: "Gothic church in Žilina", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Zilina_Holy_Trinity_2017.jpg/800px-Zilina_Holy_Trinity_2017.jpg" }, geometry: { type: "Point", coordinates: [18.739, 49.223] } },
            { type: "Feature", properties: { name: "Vlkolínec Village", type: "village", description: "UNESCO-listed folk village", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Vlkolinec_2016.jpg/800px-Vlkolinec_2016.jpg" }, geometry: { type: "Point", coordinates: [19.278, 49.038] } },
            { type: "Feature", properties: { name: "Čičmany", type: "village", description: "Folk village with painted houses", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Cicmany_Museum_2016.jpg/800px-Cicmany_Museum_2016.jpg" }, geometry: { type: "Point", coordinates: [18.517, 48.950] } },
            { type: "Feature", properties: { name: "Špania Dolina", type: "village", description: "Historic mining village", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Spania_Dolina_2018.jpg/800px-Spania_Dolina_2018.jpg" }, geometry: { type: "Point", coordinates: [19.133, 48.817] } },
            { type: "Feature", properties: { name: "Brhlovce", type: "village", description: "Rock dwellings and winery", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Brhlovce_2017.jpg/800px-Brahlovce_2017.jpg" }, geometry: { type: "Point", coordinates: [18.733, 48.217] } },
            { type: "Feature", properties: { name: "Zuberec", type: "village", description: "Traditional Orava village", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7c/Orava_Village_Museum_2018.jpg/800px-Orava_Village_Museum_2018.jpg" }, geometry: { type: "Point", coordinates: [19.667, 49.267] } },
            { type: "Feature", properties: { name: "Osturňa", type: "village", description: "Carpathian folk village", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Osturna_2016.jpg/800px-Osturna_2016.jpg" }, geometry: { type: "Point", coordinates: [20.233, 49.333] } },
            { type: "Feature", properties: { name: "Podbiel", type: "village", description: "Wooden houses in Orava", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Podbiel_2018.jpg/800px-Podbiel_2018.jpg" }, geometry: { type: "Point", coordinates: [19.483, 49.300] } },
            { type: "Feature", properties: { name: "Hronsek", type: "village", description: "Wooden church and village", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Hronsek_Wooden_Church_2016.jpg/800px-Hronsek_Wooden_Church_2016.jpg" }, geometry: { type: "Point", coordinates: [19.150, 48.650] } },
            { type: "Feature", properties: { name: "Stará Ľubovňa Village", type: "village", description: "Folk village near castle", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/Stara_Lubovna_Museum_2016.jpg/800px-Stara_Lubovna_Museum_2016.jpg" }, geometry: { type: "Point", coordinates: [20.700, 49.300] } },
            { type: "Feature", properties: { name: "Sebechleby", type: "village", description: "Wine cellars and folk houses", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Sebechleby_2017.jpg/800px-Sebechleby_2017.jpg" }, geometry: { type: "Point", coordinates: [18.967, 48.283] } },
            { type: "Feature", properties: { name: "Rajecké Teplice Spa", type: "spa", description: "Thermal spa with alkaline springs", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/Rajecke_Teplice_Spa_2017.jpg/800px-Rajecke_Teplice_Spa_2017.jpg" }, geometry: { type: "Point", coordinates: [18.610, 49.130] } },
            { type: "Feature", properties: { name: "Piešťany Spa", type: "spa", description: "Famous spa town on Váh river", image: "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Piestany_Spa_2016.jpg/800px-Piestany_Spa_2016.jpg" }, geometry: { type: "Point", coordinates: [17.839, 48.591] } }
          ]
        };

        // Cache GeoJSON in localStorage
        localStorage.setItem('poiGeoJSON', JSON.stringify(geoJsonData));

        // Marker clustering
        const markers = L.markerClusterGroup({
          maxClusterRadius: 50,
          disableClusteringAtZoom: 12
        });

        setLoading(true);
        try {
          L.geoJSON(geoJsonData, {
            pointToLayer: (feature, latlng) => {
              return L.circleMarker(latlng, {
                radius: 8,
                color: feature.properties.type === "castle" ? "#ff5733" :
                       feature.properties.type === "cave" ? "#8b4513" :
                       feature.properties.type === "nature" ? "#339933" :
                       feature.properties.type === "museum" ? "#9933cc" :
                       feature.properties.type === "church" ? "#ffd700" :
                       feature.properties.type === "village" ? "#ff69b4" :
                       feature.properties.type === "spa" ? "#00b7eb" : "#ff0000",
                fillOpacity: 0.8
              });
            },
            onEachFeature: (feature, layer) => {
              layer.bindPopup(`
                <div class="p-2">
                  <h3 class="text-lg font-bold">${feature.properties.name}</h3>
                  <p><strong>Type:</strong> ${feature.properties.type.charAt(0).toUpperCase() + feature.properties.type.slice(1)}</p>
                  <p><strong>Description:</strong> ${feature.properties.description}</p>
                  ${feature.properties.image ? `<img src="${feature.properties.image}" alt="${feature.properties.name}" class="mt-2" />` : ''}
                </div>
              `, { maxWidth: 300 });
            }
          }).addTo(markers);
          mapInstance.addLayer(markers);
        } catch (error) {
          console.error("Error loading GeoJSON:", error);
        } finally {
          setLoading(false);
        }

        setMap(mapInstance);

        return () => {
          mapInstance.remove();
        };
      }, [setMap, setLoading]);

      return <div id="map"></div>;
    });

    function App() {
      const [map, setMap] = useState(null);
      const [loading, setLoading] = useState(false);
      const [filterType, setFilterType] = useState("all");
      const [filterDistance, setFilterDistance] = useState(0);
      const [centerPoint, setCenterPoint] = useState(null);
      const [routePoints, setRoutePoints] = useState([]);
      const [routeLayer, setRouteLayer] = useState(null);
      const [routeDistance, setRouteDistance] = useState(0);
      const [searchQuery, setSearchQuery] = useState("");
      const [openAccordions, setOpenAccordions] = useState({});

      // Haversine distance
      const haversine = (lat1, lon1, lat2, lon2) => {
        const R = 6371; // Earth's radius in km
        const dLat = (lat2 - lat1) * Math.PI / 180;
        const dLon = (lon2 - lon1) * Math.PI / 180;
        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                  Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                  Math.sin(dLon / 2) * Math.sin(dLon / 2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return R * c;
      };

    // Update visible POIs
    const handleZoom = useCallback(() => {
        if (map) {
          const bounds = map.getBounds();
          const pois = [
            { label: "Orava Castle", coords: [49.262, 19.358], feature: { name: "Orava Castle", type: "castle", description: "13th-century medieval castle" } },
            { label: "Spiš Castle", coords: [49.000, 20.768], type: "castle", description: "UNESCO World Heritage Site" } },
            { label: "Bojnice Castle", coords: [48.780, 18.577], type: "castle", description: "Fairytale castle with zoo" } },
            { label: "Bratislava Castle", coords: [48.142, 17.100], type: "castle", description: "Iconic hilltop castle" },
            { label: "Devin Castle", coords: [48.173, 16.978], type: "castle", description: "Ruins at the confluence of the Danube and Morava rivers" } },
            { label: "Trenčín Castle", coords: [48.894, 18.045], type: "castle", description: "Medieval castle with panoramic views" } },
            { label: "Červený Kameň", coords: [48.392, 17.335], type: "castle", description: "Well-preserved Renaissance castle" } },
            { label: "Betliar Manor", coords: [48.705, 20.320], type: "museum", description: "Baroque manor with museum" } },
            { label: "Snina Castle", coords: [48.987, 22.152], type: "castle", description: "Castle in eastern Slovakia" } },
            { label: "Slovenská Slovenská", coords: [48.767, 19.270], type: "castle", description: "Castle with Gothic elements" } },
            { label: "Budmerice Manor", coords: [48.350, 17.433], type: "castle", description: "Neo-Gothic manor house" } },
            { label: "Beckov Castle", coords: [48.790, 17.898], type: "castle", description: "Castle ruin" } },
            { label: "Čachtice Castle", coords: [48.725, 17.761], type: "castle", description: "Infamous for Elizabeth Báthory" } },
            { label: "Brančch Castle", coords: [48.733, 17.500], type: "castle", description: "Ruins with scenic views" } },
            { label: "Jasenov Castle", coords: [48.903, 21.900], type: "castle", description: "castle ruins in eastern Slovakia" } },
            { label: "Považský Castle", coords: [49.136, 18.449], type: "castle", description: "Ruined castle above the Váh" } },
            { label: "Brekov Castle", coords: [48.900, 21.833], type: "castle", description: "13th-century castle ruins" } },
            { label: "Divín Castle", coords: [48.450, 19.533], type: "castle", description: "Gothic castle ruins" } },
            { label: "Šašov Castle", coords: [48.683, 18.900], type: "castle", description: "castle ruins in central Slovakia" } },
            { label: "Lietava Castle", coords: [49.167, 18.683], type: "castle", description: "Largest castle ruins in Slovakia" } },
            { label: "Likava Castle", coords: [49.100, 19.367], type: "castle", description: "castle near Liptovský Mikuláš" },
            { label: "Plavecký Castle", coords: "48.500, 17.283], type: "church", description: "Castle ruins in the Little Carpathians" },
            { label: "Pajštún Castle", coords: [48.317, 17.083], type: "castle", description: "Castle ruins near Bratislava" } },
            { label: "Čabrad Castle", coords: [48.250, 19.083], type: "castle", description "Remote medieval castle" } },
            { label: "Šomoška Castle", coords: [48.171, 19.857], type: "castle", image "Castle ruins near Hungary border" },
            { label: "Ochtinská Aragonite Cave", coords: [48.667, 20.317], type: "cave", description: "Rare aragonite cave system" } },
            { label: "Domica Cave", coords: [48.477, 20.483], type: "cave", description "Largest cave system in Slovak Karstislav" } },
            { label: "Gombasecká Cave", type: "cave", coords: [48.567, 20.467], type: "Cave in stalactites in Slovak Karst" } },
            { label: "Jasovská Cave", coords: [48.678, 20.975], type: "cave", description: "Oldest accessible cave in Slovakia" } },
            { label: "Dobšinská Ice Cave", type: "cave", coords: [48.867, 20.300], type: "cave", description: "UNESCO-listed ice cave" } },
            { label: "Bystrianska Cave", type: "cave", coords: [48.833, 19.600], type: "Cave in Low Tatras" },
            { label: "Demänovská Cave of Freedom", coords: [48.998, 19.583], type: "Largest cave system in Slovakia" } },
            { label: "Demänovská Ice Cave", coords: "48.983, 19.567], type: "cave" },
            { label: "Važecká Cave", type: "cave", coords: "49.050, 19.983], type" },
            { label: "Belianska Cave", type: "cave", coords: [49.233, 20.317], type: "cave in Tatra Mountains" } },
            { label: "High Tatras - Popradskéské Pleso", coords: [49.153, 20.080], type: "nature", type: "Glacial lake ideal for hiking" } },
            { label: "High Tatras - Kriváňň", coords: [49.162, 19.999], type: "nature", icon: "Iconic peak in High Tatras" } },
            { label: "Slovak Paradise - Zavojovy Waterfall", coords: [48.883, 20.383], type: "nature", description: "Scenic waterfall in Slovak Paradise National Park" } },
            { label: "Low Tatras", coords: [48.950, 19.600], type: "nature", description: "National park with hiking trails" } },
            { label: "Pieniny - Dunajec River Rafting", coords: [49.400, 20.400], type: "nature", description: "Scenic river rafting experience" } },
            { label: "Malá Fatra", coords: [49.200, 19.033], type: "nature", description: "National park with gorges and peaks" } },
            { label: "Muránska Planina", coords: [48.767, 20.033], type: "nature", description: "Karst landscape with hiking" } },
            { label: "Poloniny", coords: [49.000, 22.533], type: "nature", description: "Remote national park, UNESCO site" } },
            { label: "Slovak Karst", coords: [48.600, 20.600], type: "nature", description: "Karst region with caves" } },
            { label: "Slovak National Museum", coords: [48.141, 17.113], type: "museum", description: "Cultural museum in Bratislava" } },
            { label: "Banská Štiavnica Mining Museum", coords: [48.459, 18.893], type: "museum", description: "Open-air mining museum" } },
            { label: "Spiš Castle Museum", coords: [49.000, 20.768], type: "museum", description: "Museum within Spiš Castle" } },
            { label: "Danubiana Meulensteen Art Museum", coords: [48.033, 17.233], type: "museum", description: "Modern art museum near Bratislava" } },
            { label: "Andy Warhol Museum", coords: [49.267, 21.900], type: "museum", description: "Pop art museum in Medzilaborce" } },
            { label: "Orava Village Museum", coords: [49.267, 19.667], type: "museum", description: "Open-air museum in Zuberec" } },
            { label: "Liptov Village Museum", coords: [49.100, 19.800], type: "museum", description: "Traditional village in Pribylina" } },
            { label: "Čičmany Museum", coords: [48.950, 18.517], type: "museum", description: "Folk architecture museum" } },
            { label: "Kysuce Village Museum", coords: [49.400, 19.083], type: "museum", description: "Open-air museum in Vychylovka" } },
            { label: "SNM Martin", coords: [49.067, 18.933], type: "museum", description: "Ethnographic museum" } },
            { label: "Bojnice Castle Museum", coords: [48.780, 18.577], type: "museum", description: "Museum within Bojnice Castle" } },
            { label: "Betliar Manor Museum", coords: [48.705, 20.320], type: "museum", description: "Museum in Betliar Manor" } },
            { label: "Stará Ľubovňa Museum", coords: [49.300, 20.700], type: "museum", description: "Open-air museum with castle" } },
            { label: "Levoča Museum", coords: [49.025, 20.589], type: "museum", description: "Historical museum in Levoča" } },
            { label: "Košice Technical Museum", coords: [48.720, 21.258], type: "museum", description: "Technology museum in Košice" } },
            { label: "Blue Church", coords: [48.144, 17.139], type: "church", description: "Art Nouveau church in Bratislava" } },
            { label: "Košice Cathedral", coords: [48.720, 21.258], type: "church", description: "14th-century Gothic cathedral" } },
            { label: "Spišská Kapitula", coords: [49.000, 20.750], type: "church", description: "Medieval ecclesiastical town" } },
            { label: "St. Martin’s Cathedral", coords: [48.142, 17.105], type: "church", description: "Gothic cathedral in Bratislava" } },
            { label: "Banská Bystrica Cathedral", coords: [48.735, 19.150], type: "church", description: "Baroque cathedral" } },
            { label: "Levoča St. James Church", coords: [49.025, 20.589], type: "church", description: "Gothic church with tallest altar" } },
            { label: "Trnava St. John the Baptist", coords: [48.377, 17.587], type: "church", description: "Baroque basilica" } },
            { label: "Prešov Co-Cathedral", coords: [48.998, 21.239], type: "church", description: "Baroque cathedral" } },
            { label: "Nitra St. Emmeram", coords: [48.317, 18.087], type: "church", description: "Oldest cathedral in Slovakia" } },
            { label: "Žilina Holy Trinity", coords: [49.223, 18.739], type: "church", description: "Gothic church in Žilina" } },
            { label: "Vlkolínec Village", coords: [49.038, 19.278], type: "village", description: "UNESCO-listed folk village" } },
            { label: "Čičmany", coords: [48.950, 18.517], type: "village", description: "Folk village with painted houses" } },
            { label: "Špania Dolina", coords: [48.817, 19.133], type: "village", description: "Historic mining village" } },
            { label: "Brhlovce", coords: [48.217, 18.733], type: "village", description: "Rock dwellings and winery" } },
            { label: "Zuberec", coords: [49.267, 19.667], type: "village", description: "Traditional Orava village" } },
            { label: "Osturňa", coords: [49.333, 20.233], type: "village", description: "Carpathian folk village" } },
            { label: "Podbiel", coords: [49.300, 19.483], type: "village", description: "Wooden houses in Orava" } },
            { label: "Hronsek", coords: [48.650, 19.150], type: "village", description: "Wooden church and village" } },
            { label: "Stará Ľubovňa Village", coords: [49.300, 20.700], type: "village", description: "Folk village near castle" } },
            { label: "Sebechleby", coords: [48.283, 18.967], type: "village", description: "Wine cellars and folk houses" } },
            { label: "Rajecké Teplice Spa", coords: [49.130, 18.610], type: "spa", description: "Thermal spa with alkaline springs" } },
            { label: "Piešťany Spa", coords: [48.591, 17.839], type: "spa", description: "Famous spa town on Váh river" } }
          ].filter((poi) => {
            if (!bounds.contains(L.latLng(poi.coords[0], poi.coords[1])) {
              return false;
            }
            if (filterType !== "all" && poi.feature.type !== !==filterType) {
              return false;
            }
            if (filterDistance > 0 && centerPoint) {
              const dist = haversine(centerPoint.lat, centerPoint.lng, poi.coords[0], poi.coords[1]);
              return dist <= filterDistance;
            }
            if (searchQuery && !poi.label.toLowerCase().includes(searchQuery.toLowerCase())) {
              return false;
            }
            return true;
          });
          return pois;
        }
        return [];
      }, [map, filterType, filterDistance, centerPoint, searchQuery]);

      // Route calculation
      useEffect(() => {
        if (routePoints.length >= 2) {
          routeWorker.onmessage = (e) => {
            if (routeLayer) {
              map.removeLayer(routeLayer);
            }
            const newRouteLayer = L.polyline(e.data.path, { color: '#ff0000', weight: 4 }).addTo(map);
            setRouteLayer(newRouteLayer);
            setRouteDistance(e.data.totalDistance.toFixed(1));
            map.fitBounds(L.latLngBounds(e.data.path));
          };
          routeWorker.postMessage({ points: [...routePoints] });
        } else if (routeLayer) {
          map.removeLayer(routeLayer);
          setRouteLayer(null);
          setRouteDistance(0);
        }
      }, [routePoints, map]);

      // Update POIs on zoom/move
      const [visiblePOIs, setVisiblePOIs] = useState([]);
      useEffect(() => {
        if (map) {
          const updatePOIs = () => setVisiblePOIs(handleZoom());
          map.on('zoomend moveend', updatePOIs);
          map.on('click', (e) => setCenterPoint(e.latlng));
          updatePOIs();
          return () => {
            map.off('zoomend moveend', updatePOIs);
            map.off('click', setCenterPoint);
          };
        };
      }, [map, handleZoom]);

      // Toggle accordion
      const toggleAccordion = (type) => {
        setOpenAccordions((prev) => ({
          ...prev,
          [type]: !prev[type]
        }));
      });

      // Group POIs by type
      const groupedPOIs = visiblePOIs.reduce((acc, poi) => {
        const type = poi.feature.type;
        if (!acc[type]) {
          acc[type] = [];
        }
        acc[type].push(poi);
        return acc, {};
      }, {});

      // Reset filters
      const resetFilters = () => {
        setFilterType("all");
        setFilterDistance(0);
        setSearchQuery("");
        setCenterPoint(null);
      };

      // Reset route
      const resetRoute = () => {
        setRoutePoints([]);
        if (routeLayer) {
          map.removeLayer(routeLayer);
          setRouteLayer(null);
          setRouteDistance(0);
        }
      };

      return (
        <div className="p-4">
          <h1 className="text-2xl font-bold mb-4">Explore Slovakia</h3>
          <div class="mb-4 flex flex-col gap-4">
            <div class="flex flex-wrap gap-2 items-center">
              <select
                className="bg-gray-700 p-2 px-3 py-4 py-2 rounded border-gray-3 border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-2 focus:ring-blue-500"
                value={filterType}
                onChange={(e) => setFilterType(e.target.value)}
                title="Filter by POI type"
              >
                <option value="all">All POIs</option>
                <option value="castle">Castles</option>
                <option value="cave">Caves</option>
                <option value="nature">Nature</option>
                <option value="museum">Museums</option>
                <option value="church">Churches</option>
                <option value="village">Villages</option>
                <option value="spa">Spas</option>
              </select>
              <select
                className="bg-gray-500 p-2 px-4 py-2 rounded border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={filterDistance}
                onChange={(e) => setFilterDistance(Number(e.target.value))}
                title="Filter by distance from clicked point"
              >
                <option value={0}>Any Distance</option>
                <option value={50}>Within 50km</option>
                <option value={100}>Within 100km</option>
                <option value={200}>Within 200km</option>
              </select>
              <input
                type="text"
                className="bg-gray-100 p-2 px-4 py-2 rounded border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Search by name..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
              />
              <button
                onClick={resetFilters}
                className="bg-red-500 text-white p-2 px-4 py-2 rounded hover:bg-red-600"
              >
                Reset Filters
              </button>
              <button
                onClick={resetRoute}
                className="bg-red-500 text-white p-2 px-4 py-2 rounded hover:bg-red-600"
              >
                Reset Route
              </button>
            </div>
            {routeDistance > 0 && (
              <div className="text-lg font-semibold">
                Route Distance: {routeDistance} km
              </div>
            )}
            {loading ? (
              <div className="loading">Loading map...</div>
            ) : (
              <MapComponent setMap={setMap} setLoading={setLoading} />
            )}
            <div className="bg-white shadow-lg rounded p-4">
              {Object.keys(groupedPOIs).map((type) => (
                <div key={type} className="border-b border-gray-300">
                  <button
                    onClick={() => toggleAccordion(type)}
                    className="w-full flex justify-between items-center p-2 text-left hover:bg-gray-100"
                  >
                    <span className="text-lg font-semibold capitalize">{type} ({groupedPOIs[type].length})</span>
                    <span>{openAccordions[type] ? '▼' : '▲'}</span>
                  </button>
                  {openAccordions[type] && (
                    <div className="accordion-content p-2">
                      {groupedPOIs[type].map((poi, index) => (
                        <div
                          key={index}
                          className="flex flex-row justify-between items-center p-2 hover:bg-gray-50 cursor-pointer"
                          onClick={() => {
                            map.setView(poi.coords, 13);
                            setRoutePoints((prev) => [...prev, poi.coords]);
                          }}
                        >
                          <span className="text-sm">{poi.label}</span>
                          <button
                            className="bg-blue-500 text-white px-2 py-1 rounded-full text-sm hover:bg-blue-600"
                            onClick={(e) => {
                              e.stopPropagation();
                              setRoutePoints((prev) => [...prev, poi.coords]);
                            }}
                          >
                            Add to Route
                          </button>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        </div>
      );
    }

    ReactDOM.render(<App />, document.getElementById('root'));
  </script>
</body>
</html>